  ListNode* fun(ListNode *head, int k,int l)
    {
        if(l<k)return head;
        if(head==NULL)return NULL;
         ListNode *prev=NULL,*curr=head,*next;
         int c=0;
         //cheak  for value of c and and also cheak if curr is not null;
         
       
         while(curr!=NULL&&c<k)
         {
             next=curr->next;
             curr->next=prev;
             prev=curr;
             curr=next;
             c++;
         }
         
         
         head->next=fun(curr,k,l-k);
         return prev;
         
    }
    ListNode* reverseKGroup(ListNode* head, int k) {
       int l=0;
        ListNode *t=head;
        while(t!=NULL)
        {
            t=t->next;
            l++;
        }
        return fun(head,k,l);
    }
};

https://leetcode.com/problems/reverse-nodes-in-k-group/
